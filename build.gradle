apply from: 'buildsystem/ci.gradle'

buildscript {
  repositories {
    jcenter()
    mavenCentral()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:2.3.0'
    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
  }
}

allprojects {
  repositories {
    jcenter()
    maven { url 'https://maven.google.com/' }
  }
  ext {
    setup = [androidApplicationId     : 'com.valtech.nicklasslagbrand.presentation',
             testApplicationId        : 'com.valtech.nicklasslagbrand.presentation.test',
             testInstrumentationRunner: 'android.support.test.runner.AndroidJUnitRunner',
             androidVersionCode       : 1,
             androidVersionName       : '1.0',
             compileSdk               : 26,
             buildTools               : "26.0.3",
             minSdk                   : 15,
             targetSdk                : 26]

    versions = [daggerVersion            : '2.8',
                butterKnifeVersion       : '7.0.1',
                recyclerViewVersion      : '21.0.3',
                rxJavaVersion            : '2.0.2',
                rxAndroidVersion         : '2.0.1',
                javaxAnnotationVersion   : '1.0',
                javaxInjectVersion       : '1',
                gsonVersion              : '2.3',
                okHttpVersion            : '2.5.0',
                androidAnnotationsVersion: '21.0.3',
                arrowVersion             : '1.0.0',
                timberVersion            : '4.6.0',
                firebaseCoreVersion      : '11.6.0',

                //Testing
                robolectricVersion       : '3.1.1',
                jUnitVersion             : '4.12',
                assertJVersion           : '1.7.1',
                mockitoVersion           : '1.9.5',
                dexmakerVersion          : '1.0',
                espressoVersion          : '2.0',
                testingSupportLibVersion : '0.1',

                //Development
                leakCanaryVersion        : '1.3.1']
  }
}

task runDomainUnitTests(dependsOn: [':domain:test']) {
  description 'Run unit tests for the domain layer.'
}

task runDataUnitTests(dependsOn: [':data:cleanTestDebugUnitTest', ':data:testDebugUnitTest']) {
  description 'Run unit tests for the data layer.'
}

task runUnitTests(dependsOn: ['runDomainUnitTests', 'runDataUnitTests']) {
  description 'Run unit tests for both domain and data layers.'
}

task runAcceptanceTests(dependsOn: [':presentation:connectedAndroidTest']) {
  description 'Run application acceptance tests.'
}